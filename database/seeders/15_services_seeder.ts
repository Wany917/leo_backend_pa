import { BaseSeeder } from '@adonisjs/lucid/seeders'
import Service from '#models/service'
import Utilisateurs from '#models/utilisateurs'
import { DateTime } from 'luxon'

export default class extends BaseSeeder {
  async run() {
    const existingServices = await Service.query().limit(1)
    if (existingServices.length > 0) {
      console.log('Des services existent d√©j√†, seeder ignor√©')
      return
    }

    // ‚úÖ R√âCUP√âRER LES PRESTATAIRES PAR EMAIL
    const isabelle = await Utilisateurs.findBy('email', 'isabelle.cohen@prestafake.fr')
    const thomas = await Utilisateurs.findBy('email', 'thomas.roux@servicefake.com')
    const sandra = await Utilisateurs.findBy('email', 'sandra.petit@pretafake.org')

    if (!isabelle || !thomas || !sandra) {
      console.log('‚ùå Prestataires non trouv√©s pour les services')
      return
    }

    // ‚úÖ SERVICES ECODELI - SELON CAHIER DES CHARGES (services √† la personne)
    const services = [
      // =================================================================
      // üßπ SERVICES M√âNAGE ET ENTRETIEN
      // =================================================================
      {
        prestataireId: isabelle.id,
        name: 'M√©nage complet domicile',
        description:
          'Service de m√©nage professionnel √† domicile. Cuisine, salon, chambres, salle de bain. Aspirateur, serpill√®re, d√©poussi√©rage, nettoyage sanitaires. Produits √©cologiques fournis.',
        price: 25.0,
        location: '1er, 2√®me, 3√®me, 4√®me arrondissements Paris',
        status: 'available',
        duration: 120, // 2h
        isActive: true,
        service_type_id: null,
        pricing_type: 'hourly' as const,
        hourly_rate: 25.0,
        availability_description: 'Lundi au vendredi 9h-18h, weekend sur demande',
        home_service: true,
        requires_materials: false,
        createdAt: DateTime.now().minus({ days: 15 }),
        updatedAt: DateTime.now().minus({ days: 2 }),
      },
      {
        prestataireId: isabelle.id,
        name: 'Repassage express √† domicile',
        description:
          "Service de repassage professionnel chez vous. Jusqu'√† 20 pi√®ces par session. Fer et table √† repasser fournis. Pliage et rangement inclus.",
        price: 35.0,
        location: 'Paris centre (1er au 11√®me)',
        status: 'available',
        duration: 90,
        isActive: true,
        service_type_id: null,
        pricing_type: 'fixed' as const,
        hourly_rate: null,
        availability_description: 'Mardi, jeudi, samedi 14h-19h',
        home_service: true,
        requires_materials: false,
        createdAt: DateTime.now().minus({ days: 10 }),
        updatedAt: DateTime.now().minus({ days: 1 }),
      },

      // =================================================================
      // üë∂ SERVICES GARDE ET ACCOMPAGNEMENT
      // =================================================================
      {
        prestataireId: thomas.id,
        name: "Garde d'enfants ponctuelle",
        description:
          "Garde d'enfants qualifi√©e pour sorties, rendez-vous ou urgences. Exp√©rience 8 ans, r√©f√©rences v√©rifi√©es. Activit√©s √©ducatives, aide aux devoirs possible.",
        price: 15.0,
        location: 'Paris Est (10√®me, 11√®me, 12√®me, 20√®me)',
        status: 'available',
        duration: 180, // 3h minimum
        isActive: true,
        service_type_id: null,
        pricing_type: 'hourly' as const,
        hourly_rate: 15.0,
        availability_description: 'Disponible soirs de semaine apr√®s 17h et weekends',
        home_service: true,
        requires_materials: false,
        createdAt: DateTime.now().minus({ days: 8 }),
        updatedAt: DateTime.now(),
      },
      {
        prestataireId: thomas.id,
        name: 'Accompagnement personnes √¢g√©es',
        description:
          'Accompagnement bienveillant pour courses, rendez-vous m√©dicaux, promenades. Formation aide √† la personne, patient et attentionn√©.',
        price: 20.0,
        location: 'Tout Paris',
        status: 'available',
        duration: 120,
        isActive: true,
        service_type_id: null,
        pricing_type: 'hourly' as const,
        hourly_rate: 20.0,
        availability_description: 'Lundi au samedi 8h-20h',
        home_service: false, // Sorties ext√©rieures
        requires_materials: false,
        createdAt: DateTime.now().minus({ days: 20 }),
        updatedAt: DateTime.now().minus({ hours: 3 }),
      },

      // =================================================================
      // üîß SERVICES TECHNIQUES ET BRICOLAGE
      // =================================================================
      {
        prestataireId: sandra.id,
        name: 'Petits travaux et bricolage',
        description:
          'Montage meubles IKEA, accrochage tableaux, petite plomberie, r√©parations diverses. Outils professionnels, travail soign√© et rapide.',
        price: 45.0,
        location: 'Paris Ouest (7√®me, 8√®me, 15√®me, 16√®me, 17√®me)',
        status: 'available',
        duration: 60,
        isActive: true,
        service_type_id: null,
        pricing_type: 'custom' as const, // Devis selon travaux
        hourly_rate: 35.0,
        availability_description: 'Interventions sur rendez-vous, d√©lai 48h',
        home_service: true,
        requires_materials: true, // Selon travaux
        createdAt: DateTime.now().minus({ days: 5 }),
        updatedAt: DateTime.now().minus({ hours: 6 }),
      },
      {
        prestataireId: sandra.id,
        name: 'D√©pannage informatique domicile',
        description:
          'Installation, configuration, r√©solution de probl√®mes informatiques. PC, Mac, tablettes, smartphones. Formation utilisateur incluse.',
        price: 60.0,
        location: '√éle-de-France',
        status: 'validated', // Service v√©rifi√© par admin
        duration: 90,
        isActive: true,
        service_type_id: null,
        pricing_type: 'fixed' as const,
        hourly_rate: null,
        availability_description: 'Urgences 7j/7, interventions planifi√©es semaine',
        home_service: true,
        requires_materials: false,
        createdAt: DateTime.now().minus({ days: 30 }),
        updatedAt: DateTime.now().minus({ days: 1 }),
      },

      // =================================================================
      // üìö SERVICES √âDUCATIFS
      // =================================================================
      {
        prestataireId: thomas.id,
        name: 'Soutien scolaire math√©matiques',
        description:
          'Cours particuliers math√©matiques niveau coll√®ge-lyc√©e. M√©thodologie, exercices, pr√©paration examens. Enseignant certifi√©, r√©sultats garantis.',
        price: 30.0,
        location: 'Paris 5√®me, 6√®me, 14√®me, 15√®me',
        status: 'scheduled', // En cours avec un √©l√®ve
        duration: 120,
        isActive: true,
        service_type_id: null,
        pricing_type: 'hourly' as const,
        hourly_rate: 30.0,
        availability_description: 'Cr√©neaux disponibles mercredi apr√®s-midi et weekend',
        home_service: true,
        requires_materials: false,
        createdAt: DateTime.now().minus({ days: 12 }),
        updatedAt: DateTime.now().minus({ hours: 2 }),
      },

      // =================================================================
      // üö´ SERVICES SUSPENDUS/REFUS√âS (pour test des √©tats)
      // =================================================================
      {
        prestataireId: isabelle.id,
        name: 'Service test suspendu',
        description: 'Service temporairement suspendu pour mise √† jour des conditions.',
        price: 20.0,
        location: 'Paris',
        status: 'suspended',
        duration: 60,
        isActive: false,
        service_type_id: null,
        pricing_type: 'fixed' as const,
        hourly_rate: null,
        availability_description: 'Suspendu temporairement',
        home_service: true,
        requires_materials: false,
        createdAt: DateTime.now().minus({ days: 3 }),
        updatedAt: DateTime.now().minus({ hours: 1 }),
      },
    ]

    // ‚úÖ CR√âER LES SERVICES AVEC GESTION D'ERREURS
    for (const serviceData of services) {
      try {
        await Service.create(serviceData)
        console.log(`‚úÖ Service cr√©√©: ${serviceData.name} (${serviceData.status})`)
      } catch (error) {
        console.log(`‚ùå Erreur cr√©ation service ${serviceData.name}:`, error.message)
      }
    }

    console.log(`‚úÖ ${services.length} services EcoDeli cr√©√©s avec succ√®s`)
  }
}
